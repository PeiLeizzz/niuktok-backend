<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.niuktok.backend.common.mapper.VideoMapper">
  <resultMap id="BaseResultMap" type="com.niuktok.backend.common.entity.Video">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="video_key" jdbcType="VARCHAR" property="videoKey" />
    <result column="video_path" jdbcType="VARCHAR" property="videoPath" />
    <result column="cover_path" jdbcType="VARCHAR" property="coverPath" />
    <result column="view_num" jdbcType="BIGINT" property="viewNum" />
    <result column="like_num" jdbcType="BIGINT" property="likeNum" />
    <result column="favorite_num" jdbcType="BIGINT" property="favoriteNum" />
    <result column="share_num" jdbcType="BIGINT" property="shareNum" />
    <result column="partition_id" jdbcType="BIGINT" property="partitionId" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="deleted_time" jdbcType="TIMESTAMP" property="deletedTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="info" jdbcType="LONGVARCHAR" property="info" />
  </resultMap>

  <update id="updateInteractiveNum">
    UPDATE `video`
    SET `${interactiveName}_num` = `${interactiveName}_num` + #{num}
    WHERE `id` = #{videoID}
    AND `is_deleted` = ${@com.niuktok.backend.common.def.LogicDeleteEnum@NOT_DELETED.value}
  </update>

  <select id="selectRandom" resultMap="BaseResultMap">
    SELECT * FROM `video` AS `v1`
    JOIN (
      SELECT `id` FROM `video` 
      WHERE `is_deleted` = ${@com.niuktok.backend.common.def.LogicDeleteEnum@NOT_DELETED.value}
        <if test="filterVideos != null and filterVideos.size() > 0">
          AND `id` NOT IN 
          <foreach item="video" index="index" collection="filterVideos" open="(" close=")" separator=",">
              #{video.id}
          </foreach>
        </if>
      ORDER BY RAND() 
      LIMIT #{size}
    ) as `v2` ON `v1`.`id` = `v2`.`id`
  </select>

  <select id="selectUserRecentRandom" resultMap="BaseResultMap">
    SELECT * FROM `video` AS `v1`
    JOIN (
      SELECT `id` FROM (
        SELECT `in_v`.`id` FROM `video` as `in_v`
        LEFT JOIN `user_video_view` as `in_uvv`
        ON `in_v`.`id` = `in_uvv`.`video_id`
        AND `in_uvv`.`is_deleted` = ${@com.niuktok.backend.common.def.LogicDeleteEnum@NOT_DELETED.value}
        
        WHERE `in_v`.`user_id` != #{userID}
        AND (`in_uvv`.`user_id` IS NULL OR `in_uvv`.`user_id` != #{userID})
        AND `in_v`.`is_deleted` = 0
        ORDER BY `in_v`.`updated_time` DESC
        LIMIT #{range}
      ) as `v2`
      ORDER BY RAND() 
      LIMIT #{size}
    ) as `v3` ON `v1`.`id` = `v3`.`id`
  </select>

  <select id="selectRelateVideos" resultMap="BaseResultMap">
    SELECT v.* from `video` AS `v`
    JOIN `user_video_${interactiveName}` AS `t`
    ON `v`.`id` = `t`.`video_id`
    AND `t`.`user_id` = #{userID}
    WHERE `v`.`is_deleted` = ${@com.niuktok.backend.common.def.LogicDeleteEnum@NOT_DELETED.value}
    AND `t`.`is_deleted` = ${@com.niuktok.backend.common.def.LogicDeleteEnum@NOT_DELETED.value}
    ORDER BY `t`.`updated_time` ${orderDir}
  </select>

  <select id="selectVideosOfUser" resultMap="BaseResultMap">
    SELECT v.* from `video` AS `v`
    WHERE `v`.`is_deleted` = ${@com.niuktok.backend.common.def.LogicDeleteEnum@NOT_DELETED.value}
    ORDER BY `v`.`updated_time` ${orderDir}
  </select>
</mapper>